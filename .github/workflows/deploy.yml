name: Deploy VeedaSpace

on:
  push:
    branches:
      - main # Trigger deployment on pushes to the main branch

jobs:
  # deploy_frontend job remains the same...
  deploy_frontend:
    name: Deploy Frontend to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write # Required for cloudflare/pages-action
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Match your development environment
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./web

      - name: Lint Frontend
        run: npm run lint
        working-directory: ./web

      - name: Type Check Frontend
        run: npm run typecheck
        working-directory: ./web

      - name: Build Frontend
        run: VITE_GRAPHQL_ENDPOINT=${{ secrets.CLOUDFLARE_WORKER_URL }} npm run build
        working-directory: ./web
        env:
           VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
           VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: veeda-web # Replace with your actual Cloudflare Pages project name
          directory: web/dist # The directory containing the built frontend assets
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }} # Optional

  # --- deploy_backend Job (Updated for Wrangler) ---
  deploy_backend:
    name: Deploy Backend to Cloudflare Workers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backend-node/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend-node

      - name: Deploy to Cloudflare Workers (Production)
        working-directory: ./backend-node
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          # Set secrets in Cloudflare Workers
          npx wrangler secret put SUPABASE_URL --env production <<< "${{ secrets.SUPABASE_URL }}"
          npx wrangler secret put SUPABASE_ANON_KEY --env production <<< "${{ secrets.SUPABASE_ANON_KEY }}"
          npx wrangler secret put SUPABASE_SERVICE_ROLE_KEY --env production <<< "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}"
          
          # Deploy to production environment
          npx wrangler deploy --env production
          
          echo "Deployment to production complete!"