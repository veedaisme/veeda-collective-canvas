name: Deploy VeedaSpace

on:
  push:
    branches:
      - main # Trigger deployment on pushes to the main branch

jobs:
  # deploy_frontend job remains the same...
  deploy_frontend:
    name: Deploy Frontend to Cloudflare Pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write # Required for cloudflare/pages-action
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Match your development environment
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: ./web

      - name: Lint Frontend
        run: npm run lint
        working-directory: ./web

      - name: Type Check Frontend
        run: npm run typecheck
        working-directory: ./web

      - name: Build Frontend
        run: VITE_GRAPHQL_ENDPOINT=${{ secrets.CLOUDFLARE_WORKER_URL }} npm run build
        working-directory: ./web
        env:
           VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
           VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: veeda-frontend # Replace with your actual Cloudflare Pages project name
          directory: web/dist # The directory containing the built frontend assets
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }} # Optional

  # --- deploy_backend Job (Updated for Wrangler) ---
  deploy_backend:
    name: Deploy Backend to Cloudflare Workers
    runs-on: ubuntu-latest
    # Optional: Uncomment 'needs' to deploy backend only after frontend succeeds
    # needs: deploy_frontend
    permissions:
      contents: read
      deployments: write # Required for cloudflare/wrangler-action

    # --- Set working directory default ---
    defaults:
      run:
        working-directory: ./backend # Execute steps relative to the backend dir

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.2.8

      # --- Optional but Recommended: Add Linting/Testing ---
      - name: Run Deno Lint
        run: deno lint

      # --- Deploy using Wrangler Action ---
      - name: Deploy Worker with Wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          # Required: Cloudflare API Token from GitHub Secrets
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          # Required: Cloudflare Account ID from GitHub Secrets
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Tell Wrangler where your wrangler.toml and code is
          workingDirectory: ./backend
          # Command to run (uses wrangler.toml for config)
          # Add --minify for smaller worker size
          # Add --env <name> if using environments from wrangler.toml
          command: deploy --env production --minify
          # Optional: Add package manager if needed for wrangler install (usually not needed)
          # packageManager: npm

# --- Required GitHub Secrets ---
# You need to configure the following secrets in your GitHub repository settings:
# For *BOTH* Frontend and Backend Deployment Steps:
# - CLOUDFLARE_API_TOKEN: Cloudflare API Token with Worker and Pages permissions.
# - CLOUDFLARE_ACCOUNT_ID: Your Cloudflare Account ID.
#
# For Frontend Build Step ONLY:
# - CLOUDFLARE_WORKER_URL: The URL of your deployed backend worker (e.g., https://veeda-backend-worker.<your-account>.workers.dev).
# - VITE_SUPABASE_URL: Your Supabase project URL (for frontend build).
# - VITE_SUPABASE_ANON_KEY: Your Supabase project anon key (for frontend build).
#
# Secrets previously needed in backend `env:` (SUPABASE_URL, SUPABASE_ANON_KEY, SUPABASE_SERVICE_ROLE_KEY)
# are NO LONGER used directly by the backend deploy step. They must be set in Cloudflare.

# --- Required Cloudflare Worker Secrets (SET THESE IN CLOUDFLARE) ---
# Use `wrangler secret put` or the Cloudflare Dashboard to set these for your Worker Runtime:
# - SUPABASE_URL
# - SUPABASE_ANON_KEY
# - SUPABASE_SERVICE_ROLE_KEY